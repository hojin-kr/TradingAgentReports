name: Generate daily TradingAgents reports

on:
  schedule:
    - cron: "15 0 * * *"  # daily at 00:15 UTC
  workflow_dispatch:
    inputs:
      date:
        description: 'Date in YYYY-MM-DD (UTC). Default: today'
        required: false
        type: string
      ticker:
        description: 'Single ticker to run; default runs preset list'
        required: false
        type: string

permissions:
  contents: write

jobs:
  build-and-run:
    runs-on: ubuntu-latest
    outputs:
      date: ${{ steps.date.outputs.date }}

    env:
      # LLM provider envs (expect OPENAI_API_KEY or others in repo/user secrets)
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
      # Optional data provider keys
      FINNHUB_API_KEY: ${{ secrets.FINNHUB_API_KEY }}
      REDIS_URL: ${{ secrets.REDIS_URL }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install dependencies
        run: |
          python -m pip install -r requirements.txt
        continue-on-error: true

      - name: Determine date (UTC)
        id: date
        env:
          INPUT_DATE: ${{ github.event.inputs.date }}
        run: |
          if [ -n "$INPUT_DATE" ]; then
            echo "date=$INPUT_DATE" >> $GITHUB_OUTPUT
          else
            echo "date=$(date -u +%F)" >> $GITHUB_OUTPUT
          fi

      - name: Generate reports (by inputs or preset list)
        env:
            INPUT_TICKER: ${{ github.event.inputs.ticker }}
        run: |
          set +e
          DATE="${{ steps.date.outputs.date }}"
          if [ -n "$INPUT_TICKER" ]; then
            TICKERS=("$INPUT_TICKER")
          else
            # Preset list (editable)
            TICKERS=(PLTR NVDA SPY TSLA GOOGL META AMD AAPL QQQ NFLX)
          fi
          for T in "${TICKERS[@]}"; do
            echo "Running reports for $T on $DATE"
            python -m gen_reports --ticker "$T" --date "$DATE" --locales EN || echo "gen_reports failed for $T" >&2
          done

      - name: Commit and push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git fetch origin
          BRANCH="${GITHUB_REF_NAME:-main}"
          git pull --rebase origin "$BRANCH" || true
          git add reports eval_results || true
          if ! git diff --cached --quiet; then
            git commit -m "chore(reports): daily generation for ${{ steps.date.outputs.date }}"
            git push || true
          else
            echo "No changes to commit"
          fi

  trigger-postprocess:
    needs: build-and-run
    if: success()
    runs-on: ubuntu-latest
    
    steps:
      - name: Trigger postprocess-reports workflow
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Triggering postprocess-reports workflow for date: ${{ needs.build-and-run.outputs.date }}"
          
          # Wait a moment for the commit to be available
          sleep 10
          
          curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Content-Type: application/json" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/postprocess-reports.yml/dispatches \
            -d '{
              "ref": "main",
              "inputs": {
                "date": "${{ needs.build-and-run.outputs.date }}",
                "dry_run": "false",
                "force": "false"
              }
            }'
          
          if [ $? -eq 0 ]; then
            echo "✅ Successfully triggered postprocess-reports workflow"
          else
            echo "❌ Failed to trigger postprocess-reports workflow"
            exit 1
          fi


